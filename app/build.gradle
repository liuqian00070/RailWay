apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.railway.analysis"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            buildConfigField "boolean", "HttpRelease", "false"
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    if (outputFileName.toLowerCase().endsWith('debug.apk')) {
                        outputFileName = "Railway_${variant.versionName}_${defaultConfig.versionCode}_${releaseTime()}_debug.apk"
                    }
                }
            }
        }

        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            buildConfigField "boolean", "HttpRelease", "true"
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //将release版本的包名重命名，加上版本及日期
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    if (outputFileName.toLowerCase().endsWith('release.apk')) {
                        outputFileName = "Railway_${variant.versionName}_${defaultConfig.versionCode}_${releaseTime()}_release.apk"
                    }
                }
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    greendao {
        schemaVersion 1
        targetGenDir 'src/main/java'
        daoPackage 'com.kdanmobile.android.signhere.greendao'
    }


    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'com.android.support:appcompat-v7:28.0.0'
        implementation 'com.android.support.constraint:constraint-layout:1.1.3'
        implementation 'com.android.support:design:28.0.0'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

        /*Json解析包*/
        implementation 'com.google.code.gson:gson:2.8.5'

        /*Rx2.0系列*/
        implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
        implementation('io.reactivex.rxjava2:rxandroid:2.1.1') {
            exclude group: 'io.reactivex.rxjava2'
        }
        implementation('com.trello.rxlifecycle3:rxlifecycle-android:3.0.0') {
            exclude group: 'io.reactivex.rxjava2'
        }
        implementation('com.trello.rxlifecycle3:rxlifecycle-components:3.0.0') {
            exclude group: 'io.reactivex.rxjava2'
            exclude group: 'androidx.appcompat'
        }

        implementation 'com.squareup.okhttp3:okhttp:3.14.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:3.14.0'
        /*retrofit2，他自身包含Okhttp3*/
        implementation('com.squareup.retrofit2:retrofit:2.5.0') {
            exclude group: 'com.squareup.okhttp3'
        }
        implementation('com.squareup.retrofit2:converter-gson:2.5.0') {
            exclude group: 'com.google.code.gson'
        }
        implementation('com.squareup.retrofit2:adapter-rxjava2:2.5.0') {
            exclude group: 'io.reactivex.rxjava2'
        }

    }
}
